<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.SeatMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Seat">
    <id column="seat_id" jdbcType="INTEGER" property="seatId" />
    <result column="seat_study_room_id" jdbcType="INTEGER" property="seatStudyRoomId" />
    <result column="seat_number" jdbcType="INTEGER" property="seatNumber" />
    <result column="seat_is_near_power" jdbcType="BIT" property="seatIsNearPower" />
    <result column="seat_is_available" jdbcType="BIT" property="seatIsAvailable" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    seat_id, seat_study_room_id, seat_number, seat_is_near_power, seat_is_available
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.SeatExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from seat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seat
    where seat_id = #{seatId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from seat
    where seat_id = #{seatId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.SeatExample">
    delete from seat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Seat" useGeneratedKeys="true" keyProperty="seatId" keyColumn="seat_id">
    insert into seat (seat_study_room_id, seat_number,
      seat_is_near_power, seat_is_available)
    values (#{seatStudyRoomId,jdbcType=INTEGER}, #{seatNumber,jdbcType=INTEGER},
      #{seatIsNearPower,jdbcType=BIT}, #{seatIsAvailable,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Seat">
    insert into seat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seatId != null">
        seat_id,
      </if>
      <if test="seatStudyRoomId != null">
        seat_study_room_id,
      </if>
      <if test="seatNumber != null">
        seat_number,
      </if>
      <if test="seatIsNearPower != null">
        seat_is_near_power,
      </if>
      <if test="seatIsAvailable != null">
        seat_is_available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seatId != null">
        #{seatId,jdbcType=INTEGER},
      </if>
      <if test="seatStudyRoomId != null">
        #{seatStudyRoomId,jdbcType=INTEGER},
      </if>
      <if test="seatNumber != null">
        #{seatNumber,jdbcType=INTEGER},
      </if>
      <if test="seatIsNearPower != null">
        #{seatIsNearPower,jdbcType=BIT},
      </if>
      <if test="seatIsAvailable != null">
        #{seatIsAvailable,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.SeatExample" resultType="java.lang.Long">
    select count(*) from seat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update seat
    <set>
      <if test="record.seatId != null">
        seat_id = #{record.seatId,jdbcType=INTEGER},
      </if>
      <if test="record.seatStudyRoomId != null">
        seat_study_room_id = #{record.seatStudyRoomId,jdbcType=INTEGER},
      </if>
      <if test="record.seatNumber != null">
        seat_number = #{record.seatNumber,jdbcType=INTEGER},
      </if>
      <if test="record.seatIsNearPower != null">
        seat_is_near_power = #{record.seatIsNearPower,jdbcType=BIT},
      </if>
      <if test="record.seatIsAvailable != null">
        seat_is_available = #{record.seatIsAvailable,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update seat
    set seat_id = #{record.seatId,jdbcType=INTEGER},
      seat_study_room_id = #{record.seatStudyRoomId,jdbcType=INTEGER},
      seat_number = #{record.seatNumber,jdbcType=INTEGER},
      seat_is_near_power = #{record.seatIsNearPower,jdbcType=BIT},
      seat_is_available = #{record.seatIsAvailable,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Seat">
    update seat
    <set>
      <if test="seatStudyRoomId != null">
        seat_study_room_id = #{seatStudyRoomId,jdbcType=INTEGER},
      </if>
      <if test="seatNumber != null">
        seat_number = #{seatNumber,jdbcType=INTEGER},
      </if>
      <if test="seatIsNearPower != null">
        seat_is_near_power = #{seatIsNearPower,jdbcType=BIT},
      </if>
      <if test="seatIsAvailable != null">
        seat_is_available = #{seatIsAvailable,jdbcType=BIT},
      </if>
    </set>
    where seat_id = #{seatId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Seat">
    update seat
    set seat_study_room_id = #{seatStudyRoomId,jdbcType=INTEGER},
      seat_number = #{seatNumber,jdbcType=INTEGER},
      seat_is_near_power = #{seatIsNearPower,jdbcType=BIT},
      seat_is_available = #{seatIsAvailable,jdbcType=BIT}
    where seat_id = #{seatId,jdbcType=INTEGER}
  </update>
</mapper>