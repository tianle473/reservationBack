<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.StudyRoomMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.StudyRoom">
    <id column="sr_id" jdbcType="INTEGER" property="srId" />
    <result column="sr_name" jdbcType="VARCHAR" property="srName" />
    <result column="sr_capacity" jdbcType="INTEGER" property="srCapacity" />
    <result column="sr_open_time" jdbcType="TIME" property="srOpenTime" />
    <result column="sr_close_time" jdbcType="TIME" property="srCloseTime" />
    <result column="sr_is_available" jdbcType="BIT" property="srIsAvailable" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sr_id, sr_name, sr_capacity, sr_open_time, sr_close_time, sr_is_available
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.StudyRoomExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from study_room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from study_room
    where sr_id = #{srId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from study_room
    where sr_id = #{srId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.StudyRoomExample">
    delete from study_room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.StudyRoom" useGeneratedKeys="true" keyColumn="sr_id" keyProperty="srId">
    insert into study_room (sr_name, sr_capacity,
      sr_open_time, sr_close_time, sr_is_available
      )
    values (#{srName,jdbcType=VARCHAR}, #{srCapacity,jdbcType=INTEGER},
      #{srOpenTime,jdbcType=TIME}, #{srCloseTime,jdbcType=TIME}, #{srIsAvailable,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.StudyRoom">
    insert into study_room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="srId != null">
        sr_id,
      </if>
      <if test="srName != null">
        sr_name,
      </if>
      <if test="srCapacity != null">
        sr_capacity,
      </if>
      <if test="srOpenTime != null">
        sr_open_time,
      </if>
      <if test="srCloseTime != null">
        sr_close_time,
      </if>
      <if test="srIsAvailable != null">
        sr_is_available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="srId != null">
        #{srId,jdbcType=INTEGER},
      </if>
      <if test="srName != null">
        #{srName,jdbcType=VARCHAR},
      </if>
      <if test="srCapacity != null">
        #{srCapacity,jdbcType=INTEGER},
      </if>
      <if test="srOpenTime != null">
        #{srOpenTime,jdbcType=TIME},
      </if>
      <if test="srCloseTime != null">
        #{srCloseTime,jdbcType=TIME},
      </if>
      <if test="srIsAvailable != null">
        #{srIsAvailable,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.StudyRoomExample" resultType="java.lang.Long">
    select count(*) from study_room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update study_room
    <set>
      <if test="record.srId != null">
        sr_id = #{record.srId,jdbcType=INTEGER},
      </if>
      <if test="record.srName != null">
        sr_name = #{record.srName,jdbcType=VARCHAR},
      </if>
      <if test="record.srCapacity != null">
        sr_capacity = #{record.srCapacity,jdbcType=INTEGER},
      </if>
      <if test="record.srOpenTime != null">
        sr_open_time = #{record.srOpenTime,jdbcType=TIME},
      </if>
      <if test="record.srCloseTime != null">
        sr_close_time = #{record.srCloseTime,jdbcType=TIME},
      </if>
      <if test="record.srIsAvailable != null">
        sr_is_available = #{record.srIsAvailable,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update study_room
    set sr_id = #{record.srId,jdbcType=INTEGER},
      sr_name = #{record.srName,jdbcType=VARCHAR},
      sr_capacity = #{record.srCapacity,jdbcType=INTEGER},
      sr_open_time = #{record.srOpenTime,jdbcType=TIME},
      sr_close_time = #{record.srCloseTime,jdbcType=TIME},
      sr_is_available = #{record.srIsAvailable,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.StudyRoom">
    update study_room
    <set>
      <if test="srName != null">
        sr_name = #{srName,jdbcType=VARCHAR},
      </if>
      <if test="srCapacity != null">
        sr_capacity = #{srCapacity,jdbcType=INTEGER},
      </if>
      <if test="srOpenTime != null">
        sr_open_time = #{srOpenTime,jdbcType=TIME},
      </if>
      <if test="srCloseTime != null">
        sr_close_time = #{srCloseTime,jdbcType=TIME},
      </if>
      <if test="srIsAvailable != null">
        sr_is_available = #{srIsAvailable,jdbcType=BIT},
      </if>
    </set>
    where sr_id = #{srId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.StudyRoom">
    update study_room
    set sr_name = #{srName,jdbcType=VARCHAR},
      sr_capacity = #{srCapacity,jdbcType=INTEGER},
      sr_open_time = #{srOpenTime,jdbcType=TIME},
      sr_close_time = #{srCloseTime,jdbcType=TIME},
      sr_is_available = #{srIsAvailable,jdbcType=BIT}
    where sr_id = #{srId,jdbcType=INTEGER}
  </update>
</mapper>